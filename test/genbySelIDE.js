// @ts-check
require('chromedriver') //Added by me so we can find locally npm installed Chromedriver
// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
//const assert = require('assert')

const fs = require('fs')
const chai = require('chai')
const assert = chai.assert
const addContext = require('mochawesome/addContext')

const helperlib = require('../myfunctlib.js')

const homePage = require('../POM/homePage.js')

describe('Add/delete cap', function () {
  this.timeout(30000)

  let vars
  let driver
  beforeEach(async function () {
    
    driver = await new Builder().forBrowser('chrome').build()
    
    await driver.manage().setTimeouts({
      implicit: 5000
    })
    await driver.manage().window().maximize();
    
    vars = {}

  })
  afterEach(async function () {
    //setTimeout(()=>{console.log("Hacky waiting so we dont reuse chromedriver")},3000) 
    
    await driver.close();
    await driver.quit();
    
    console.log("Browser closed");

  })
  it('pom test', async function () {
    await driver.get("https://www.edgewordstraining.co.uk/demo-site/")
    await helperlib.betterWaitForVisible(driver, homePage.searchField)
    await homePage.searchForProduct(driver,'cap')
  })

  it('Test1', async function () {
    
    await driver.get("https://www.edgewordstraining.co.uk/demo-site/")
    //await driver.manage().window().setRect(1022, 887)
    await driver.findElement(By.id("woocommerce-product-search-field-0")).click()
    await driver.findElement(By.id("woocommerce-product-search-field-0")).sendKeys("cap")
    await driver.findElement(By.id("woocommerce-product-search-field-0")).sendKeys(Key.ENTER)
    await helperlib.betterWaitForVisible(driver, By.name("add-to-cart"), 15000)
    await driver.findElement(By.name("add-to-cart")).click()
    await driver.findElement(By.linkText("View cart")).click()
    await driver.findElement(By.linkText("×")).click()
    await driver.sleep(3000)
    await driver.findElement(By.linkText("Return to shop")).click()
    let pageTitle = await driver.getTitle()
    assert.equal(pageTitle, "Products – Edgewords Shop", "Wrong page?");
    
    
    console.log("Fin1")
  })
  it('Test2', async function () {
    await driver.get("https://google.com/")
    console.log("Fin2")
  })

  // before(async function () {

  //   driver = await new Builder().forBrowser('chrome').build();

  //   // await driver.manage().setTimeouts(
  //   //         {
  //   //             implicit: 10000
  //   //         }
  //   //        )
  // });

  // after(async function () {
  //   await driver.quit();
  // });

  // it('Drag drop', async function () {
  //   await driver.get("https://www.edgewordstraining.co.uk/training-site/cssXPath.html");
  //   const gripper = await driver.findElement(By.css('a.ui-slider-handle'));
  //   // https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/lib/input_exports_Actions.html
  //   await driver.actions({ bridge: true }) //{bridge: true} needed for Chrome not Firefox
  //     .click(gripper)
  //     .dragAndDrop(gripper, { x: 150, y: 0 })
  //     .perform();
  //   await driver.sleep(10000);

  //   //take screenshot
  //   const base64 = await driver.takeScreenshot();
  //   const buffer = Buffer.from(base64, 'base64');
  //   fs.writeFileSync('screenshot.jpg', buffer);
  // })


  // it('uses a combo box', async function () {

  //   await driver.get("http://edgewordstraining.co.uk/webdriver2/docs/forms.html");
  //   await driver.sleep(1000);
  //   for (let i = 1; i <= 3; i++) {
  //     await driver.findElement(By.xpath('//*[@id="select"]/option[' + i + ']')).click();
  //     await driver.sleep(1000);
  //   }

  //   await driver.sleep(5000);
  // });
  // it.skip('uses the POM', async function () {
  //   await driver.get("https://www.edgewordstraining.co.uk/demo-site/");
  //   await homePage.searchForProduct(driver, "hoodie");
  //   await driver.sleep(10000);
  // });

  // it('Test Case', async function () {

  //   await driver.manage().window().maximize();
  //   await driver.get("https://www.edgewordstraining.co.uk/demo-site/");
  //   // addContext(this, "Web page opened");
  //   // addContext(this, "http://www.edgewordstraining.co.uk/demo-site");
  //   // addContext(this, "https://www.edgewordstraining.co.uk/demo-site/wp-content/uploads/2018/03/accessories-324x324.jpg");
  //   let pageTitleText = await driver.getTitle();
  //   //assert.equal(pageTitleText,"Edgewords Shop - e-commerce demo site for Training","We must be on the wrong page")
  //   await driver.findElement(By.id("woocommerce-product-search-field-0")).click();
  //   await driver.findElement(By.id("woocommerce-product-search-field-0")).clear();
  //   await driver.findElement(By.id("woocommerce-product-search-field-0")).sendKeys("cap");
  //   await driver.findElement(By.id("woocommerce-product-search-field-0")).sendKeys(Key.ENTER);
  //   await driver.findElement(By.name("add-to-cart")).click();

  //   //let viewCartButton = await myLib.waitForVisible(driver, By.xpath("(//a[contains(.,'View cart')])[2]"), 10000);
  //   //await viewCartButton.click();
  //   // await drive.sleep(5000);
  //   // assert.isTrue(await driver.findElement(By.linkText('Cap')).isDisplayed(), "Cap is not there")
  //   // await driver.findElement(By.linkText("×")).click();
  //   // driver.sleep(3000);//Hack to add an explicit unconditional delay. Do not use in production.
  //   // // let returnButton = await driver.wait(until.elementLocated(By.linkText("Return to shop")),10000,"Didnt find the button")
  //   // let returnButton = await myLib.waitForVisible(driver, By.linkText("Return to shop"), 10);
  //   // await returnButton.click();
  //   // await driver.findElement(By.linkText("Home")).click();

  // });

  it('Some other test case', async function () {
    //this.retries(3);
    addContext(this, "simple string")
    addContext(this, "http://www.google.com")

    console.log("Trying test");
    assert.fail("This test fails");
    
  });
})
